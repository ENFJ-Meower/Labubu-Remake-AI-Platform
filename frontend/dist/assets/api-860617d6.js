const d={baseURL:"http://localhost:8081/api/v1",timeout:3e4,headers:{"Content-Type":"application/json",Accept:"application/json"},getTenantId(){const a=JSON.parse(localStorage.getItem("userInfo")||"{}");if(!a.tenant_id){const t=`tenant_${Date.now()}`;a.tenant_id=t,localStorage.setItem("userInfo",JSON.stringify(a)),console.log("Generated default tenant ID生成默认租户ID:",t)}return a.tenant_id},endpoints:{submitDAG:"/submit",notifyReady:"/ready",getDAGStatus:"/status/{dag_id}",getResult:"/message",getAllDAGs:"/AllDag/{tenantID}",statusStream:"/status/stream/{dag_id}"}};class u{constructor(){this.config=d}async request(t,e={}){const n=this.config.baseURL+t,i={headers:{...this.config.headers,...this.getAuthHeaders()},timeout:this.config.timeout};try{const s=await fetch(n,{...i,...e});if(!s.ok)throw new Error(`HTTP ${s.status}: ${s.statusText}`);const o=s.headers.get("content-type");return o&&o.includes("application/json")?await s.json():await s.text()}catch(s){throw console.error("API request failed API请求失败:",s),s}}getAuthHeaders(){const t=localStorage.getItem("authToken");return t?{Authorization:`Bearer ${t}`}:{}}async submitDAG(t){const e={dag_id:t.dag_id,tenant_id:this.config.getTenantId(),nodes:t.nodes,edges:t.edges};return await this.request(this.config.endpoints.submitDAG,{method:"POST",body:JSON.stringify(e)})}async notifyReady(t){return await this.request(this.config.endpoints.notifyReady,{method:"POST",body:JSON.stringify({dag_id:t,tenant_id:this.config.getTenantId()})})}async getDAGStatus(t){const e=this.config.endpoints.getDAGStatus.replace("{dag_id}",t);return await this.request(e,{method:"GET"})}async getResult(t){return await this.request(this.config.endpoints.getResult,{method:"GET"})}async getAllDAGs(){const t=this.config.getTenantId(),e=this.config.endpoints.getAllDAGs.replace("{tenantID}",t);return await this.request(e,{method:"GET"})}createStatusStream(t,e,n){const i=this.config.getTenantId(),s=`${this.config.baseURL}${this.config.endpoints.statusStream.replace("{dag_id}",t)}?tenant_id=${i}`,o=new EventSource(s);return o.onmessage=r=>{try{const c=JSON.parse(r.data);e(c)}catch(c){console.error("Failed to parse SSE message解析SSE消息失败:",c)}},o.onerror=r=>{console.error("SSE connection error SSE连接错误:",r),n&&n(r)},o}async uploadFile(t,e){try{const n=await fetch(e,{method:"PUT",body:t,headers:{"Content-Type":t.type}});if(!n.ok)throw new Error(`File upload failed文件上传失败: ${n.statusText}`);return{success:!0,url:e.split("?")[0]}}catch(n){throw console.error("File upload failed文件上传失败:",n),n}}generateDAGId(t="dag"){const e=Date.now(),n=Math.random().toString(36).substr(2,5);return`${t}_${e}_${n}`}}const l=new u;export{d as API_CONFIG,l as default,l as workflowAPI};
